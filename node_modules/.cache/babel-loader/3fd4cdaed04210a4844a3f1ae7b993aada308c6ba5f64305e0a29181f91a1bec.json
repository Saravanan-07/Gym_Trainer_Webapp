{"ast":null,"code":"// import React, { useState } from 'react';\n// import '../../assets/css/others/Dietfood.css';\n// import Card from '@mui/material/Card';\n// import CardContent from '@mui/material/CardContent';\n// import CardMedia from '@mui/material/CardMedia';\n// import Typography from '@mui/material/Typography';\n\n// import Select from '@mui/material/Select';\n// import MenuItem from '@mui/material/MenuItem';\n// import FormControl from '@mui/material/FormControl';\n// import InputLabel from '@mui/material/InputLabel';\n// import CalorieCalculator from './CalorieCalculator';\n\n// const cardData = [\n//   { id: 1, category: 'meats', title: 'Chicken Fry with oil', image: 'https://t4.ftcdn.net/jpg/06/28/27/79/360_F_628277923_qT6P3ITveUaKTvSDk6s9DYiuXkNviGII.jpg', carbs: 0, protein: 25, fats: 10, fiber: 0, calories: 220 },\n//   { id: 2, category: 'meats', title: 'Mutton with oil', image: 'https://www.archanaskitchen.com/images/archanaskitchen/1-Author/jyothir/Kerala_Mutton_Pepper_Fry.jpg', carbs: 0, protein: 20, fats: 15, fiber: 0, calories: 250 },\n//   { id: 3, category: 'meats', title: 'Fish', image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTw-OVJWuFn4iK_0OqbjJS3xyA96jbanNEEZA&s', carbs: 0, protein: 22, fats: 5, fiber: 0, calories: 150 },\n//   { id: 4, category: 'meats', title: 'Beef', image: 'https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjDfO_QSWBm4j6s8EZgYRWEqFnan0mJZYZEeLRNdBi_JnBSf5KBdzUNmv12E-YhF6svnw7qfZBRgc7lB-IhAtWHROR30dNwt6ku_R6Jn0iYGgdDs2Ibf41wPSFmi-sXM8CjAvfnynwyVhk/s1600/beef+fry+1i.JPG', carbs: 0, protein: 26, fats: 20, fiber: 0, calories: 290 },\n//   { id: 5, category: 'nuts', title: 'Groundnut', image: 'https://t3.ftcdn.net/jpg/03/31/41/94/360_F_331419421_Km1fAYtIUbdId8eWetjAKTdpydJIBMcL.jpg', carbs: 16, protein: 25, fats: 49, fiber: 9, calories: 567 },\n//   { id: 6, category: 'meat', title: 'Whole egg', image: 'https://www.jerkyholic.com/wp-content/uploads/2023/04/Eggs-Smoked.jpg', carbs: 1.1, protein: 13, fats: 11, fiber: 0, calories: 155 },\n//   { id: 7, category: 'meat', title: 'Egg whites', image: 'https://laughingspatula.com/wp-content/uploads/2022/03/egg-white-shell-for-deviled-egg.jpg', carbs: 0.7, protein: 11, fats: 0.2, fiber: 0, calories: 52 },\n//   { id: 8, category: 'millets', title: 'Oats', image: 'https://img.freepik.com/free-photo/raw-barley-grain-old-dark-background_1150-37928.jpg', carbs: 66, protein: 17, fats: 7, fiber: 11, calories: 389 },\n//   { id: 9, category: 'millets', title: 'Boiled Black chana', image: 'https://www.cookwithmanali.com/wp-content/uploads/2019/03/Kala-Chana-Chaat-500x375.jpg', carbs: 27, protein: 9, fats: 3, fiber: 8, calories: 164 },\n//   { id: 10, category: 'millets', title: 'Boiled White Chana', image: 'https://media.istockphoto.com/id/1577137916/photo/cooked-chickpeas-in-white-bowl-isolated-on-white.jpg?s=612x612&w=0&k=20&c=byVp7OJMvVO6YDQFTBHof7VMdcFXaUNJ8Ab-yx586Wo=', carbs: 27, protein: 9, fats: 3, fiber: 8, calories: 164 },\n//   { id: 11, category: 'millets', title: 'Green Moong Dal', image: 'https://5.imimg.com/data5/SELLER/Default/2023/3/DC/CM/HQ/31738799/green-gram-500x500.jpg', carbs: 59, protein: 24, fats: 1, fiber: 16, calories: 347 },\n//   { id: 12, category: 'millets', title: 'Boiled Brown Beans', image: 'https://cdn.apartmenttherapy.info/image/upload/f_jpg,q_auto:eco,c_fill,g_auto,w_1500,ar_1:1/k%2FPhoto%2FRecipes%2F2020-10-How-to-Cook-a-Perfect-Pot-of-Pinto-Beans%2FHow-to-Cook-a-Perfect-Pot-of-Pinto-Beans_010', carbs: 27, protein: 9, fats: 3, fiber: 8, calories: 164 },\n//   { id: 13, category: 'millets', title: 'Boiled Rice', image: 'https://www.kitchensanctuary.com/wp-content/uploads/2019/08/How-to-boil-rice-square-FS-6126.jpg', carbs: 28, protein: 2.7, fats: 0.3, fiber: 0.4, calories: 130 },\n//   { id: 14, category: 'millets', title: 'Chapati', image: 'https://static.toiimg.com/thumb/61203720.cms?imgsize=670417&width=800&height=800', carbs: 18, protein: 4, fats: 3, fiber: 2, calories: 104 },\n//   { id: 15, category: 'millets', title: 'Parota', image: 'https://www.whiskaffair.com/wp-content/uploads/2020/04/Kerala-Parotta-1.jpg', carbs: 32, protein: 6, fats: 10, fiber: 2, calories: 300 },\n//   { id: 16, category: 'millets', title: 'Dosa', image: 'https://t3.ftcdn.net/jpg/01/86/33/72/360_F_186337209_9rbcMLu3wGCDNaEoK1jO0aNzb0pv7Xs7.jpg', carbs: 27, protein: 4, fats: 6, fiber: 1, calories: 168 },\n//   { id: 17, category: 'millets', title: 'Idli', image: 'https://us.123rf.com/450wm/cokemomo/cokemomo1310/cokemomo131000040/23294622-idli-south-indian-rice-cake-on-banana-leaf.jpg?ver=6', carbs: 12, protein: 2, fats: 0.4, fiber: 0.5, calories: 58 },\n//   { id: 18, category: 'millets', title: 'Ragi Dosa', image: 'https://www.chefkunalkapur.com/wp-content/uploads/2021/05/Ragi-Dosa-Instant-scaled.jpg?v=1619848402', carbs: 32, protein: 5, fats: 7, fiber: 2, calories: 170 },\n//   { id: 19, category: 'millets', title: 'Puri', image: 'https://cdn.cdnparenting.com/articles/2020/02/26144721/PURI-BHAJI-RECIPE.webp', carbs: 23, protein: 3, fats: 9, fiber: 0.8, calories: 149 },\n// ];\n\n// const Dietfoods = () => {\n//   const [filter, setFilter] = useState('all');\n//   const [inputValues, setInputValues] = useState({});\n//   const [meals, setMeals] = useState({\n//     breakfast: [],\n//     morningSnacks: [],\n//     lunch: [],\n//     eveningSnacks: [],\n//     dinner: []\n//   });\n\n//   const handleFilterChange = (event) => {\n//     setFilter(event.target.value);\n//   };\n\n//   const handleInputChange = (event, itemId) => {\n//     const { value } = event.target;\n//     setInputValues((prevValues) => ({\n//       ...prevValues,\n//       [itemId]: value,\n//     }));\n//   };\n\n//   const calculateTotal = (item) => {\n//     const grams = parseFloat(inputValues[item.id] || 0);\n//     const factor = grams / 100;\n\n//     return {\n//       carbs: (item.carbs * factor).toFixed(2),\n//       protein: (item.protein * factor).toFixed(2),\n//       fats: (item.fats * factor).toFixed(2),\n//       fiber: (item.fiber * factor).toFixed(2),\n//       calories: (item.calories * factor).toFixed(2),\n//     };\n//   };\n\n//   const addToMeal = (mealName, item) => {\n//     const totals = calculateTotal(item);\n//     const foodItem = {\n//       ...item,\n//       quantity: inputValues[item.id],\n//       totals\n//     };\n\n//     setMeals((prevMeals) => ({\n//       ...prevMeals,\n//       [mealName]: [...prevMeals[mealName], foodItem],\n//     }));\n//   };\n\n//   const removeFromMeal = (mealName, itemId) => {\n//     setMeals((prevMeals) => ({\n//       ...prevMeals,\n//       [mealName]: prevMeals[mealName].filter((food) => food.id !== itemId),\n//     }));\n//   };\n\n//   const resetMeals = () => {\n//     setMeals({\n//       breakfast: [],\n//       morningSnacks: [],\n//       lunch: [],\n//       eveningSnacks: [],\n//       dinner: []\n//     });\n//     setInputValues({});\n//   };\n\n//   const filteredItems = filter === 'all' ? cardData : cardData.filter(item => item.category === filter);\n\n//   const renderMeal = (mealName) => {\n//     const meal = meals[mealName];\n\n//     const totalNutrients = meal.reduce((acc, food) => {\n//       acc.carbs += parseFloat(food.totals.carbs);\n//       acc.protein += parseFloat(food.totals.protein);\n//       acc.fats += parseFloat(food.totals.fats);\n//       acc.fiber += parseFloat(food.totals.fiber);\n//       acc.calories += parseFloat(food.totals.calories);\n//       return acc;\n//     }, { carbs: 0, protein: 0, fats: 0, fiber: 0, calories: 0 });\n\n//     return (\n//       <div className=\"meal\">\n//         <h3 style={{color:'white',marginBottom:'20px',fontSize:'25px'}}>{mealName.charAt(0).toUpperCase() + mealName.slice(1)}</h3>\n//         <ul>\n//           <li>Total Carbs: {totalNutrients.carbs.toFixed(2)} g</li>\n//           <li>Total Protein: {totalNutrients.protein.toFixed(2)} g</li>\n//           <li>Total Fats: {totalNutrients.fats.toFixed(2)} g</li>\n//           <li>Total Fiber: {totalNutrients.fiber.toFixed(2)} g</li>\n//           <li>Total Calories: {totalNutrients.calories.toFixed(2)} kcal</li>\n//         </ul>\n//         <div class=\"typesofmeals\">\n//         <ul>\n//           {meal.map(food => (\n//             <li key={food.id}>\n//               {food.title} - {food.quantity}g\n//               <button class='remove' onClick={() => removeFromMeal(mealName, food.id)}>Remove</button>\n//             </li>\n//           ))}\n//         </ul>\n//         </div>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div>\n\n//       <CalorieCalculator/>\n//       <h2 className=\"headdd\">Track your calories</h2>\n// <div className=\"meals-container\">\n//     <div className=\"mealbox\">{renderMeal('breakfast')}</div>\n//     <div className=\"mealbox\">{renderMeal('morningSnacks')}</div>\n//     <div className=\"mealbox\">{renderMeal('lunch')}</div>\n//     <div className=\"mealbox\">{renderMeal('eveningSnacks')}</div>\n//     <div className=\"mealbox\">{renderMeal('dinner')}</div>\n// </div>\n// <div className=\"resetbtn\">\n//     <button onClick={resetMeals}>Reset All</button>\n// </div>\n// <div className=\"search-filter-container\">\n//     <FormControl variant=\"outlined\" className=\"filter-dropdown\">\n//         <InputLabel></InputLabel>\n//         <Select\n//             className=\"selectfood\"\n//             value={filter}\n//             onChange={handleFilterChange}\n//         >\n//             <MenuItem value=\"all\">All</MenuItem>\n//             <MenuItem value=\"meats\">Meats</MenuItem>\n//             <MenuItem value=\"nuts\">Nuts</MenuItem>\n//             <MenuItem value=\"millets\">Millets</MenuItem>\n//         </Select>\n//     </FormControl>\n// </div>\n// <div className=\"dietfoods\">\n//     <div className=\"dietrows\">\n//         {filteredItems.map(item => {\n//             const totals = calculateTotal(item);\n//             return (\n//                 <div key={item.id} className={`subcard ${item.isSelected ? 'selected' : ''}`}>\n//                     <Card sx={{ width: 230 }}>\n//                         <CardMedia\n//                             component=\"img\"\n//                             alt={item.title}\n//                             height=\"140\"\n//                             image={item.image}\n//                         />\n//                         <CardContent>\n//                             <Typography gutterBottom variant=\"h7\" component=\"div\">\n//                                 {item.title}\n//                                 <input className=\"graminput\"\n//                                     type=\"number\"\n//                                     placeholder=\"In grams\"\n//                                     value={inputValues[item.id] || ''}\n//                                     onChange={(event) => handleInputChange(event, item.id)}\n//                                 />\n//                             </Typography>\n//                             <Typography variant=\"body2\" color=\"text.secondary\">\n//                                 <ul className='subcardul'>\n//                                     <li className='subcardulli'>Carbs: {totals.carbs} g</li>\n//                                     <li className='subcardulli'>Protein: {totals.protein} g</li>\n//                                     <li className='subcardulli'>Fats: {totals.fats} g</li>\n//                                     <li className='subcardulli'>Fiber: {totals.fiber} g</li>\n//                                     <li className='subcardulli'>Calories: {totals.calories} kcal</li>\n//                                     <br />\n//                                     <li className='subcardulli'>\n//                                         <button className='adddd' onClick={() => addToMeal('breakfast', item)}>Add to Breakfast</button>\n//                                         <button className='adddd' onClick={() => addToMeal('morningSnacks', item)}>Add to Morning Snacks</button>\n//                                         <button className='adddd' onClick={() => addToMeal('lunch', item)}>Add to Lunch</button>\n//                                         <button className='adddd' onClick={() => addToMeal('eveningSnacks', item)}>Add to Evening Snacks</button>\n//                                         <button className='adddd' onClick={() => addToMeal('dinner', item)}>Add to Dinner</button>\n//                                     </li>\n//                                 </ul>\n//                             </Typography>\n//                         </CardContent>\n//                     </Card>\n//                 </div>\n//             );\n//         })}\n//     </div>\n// </div>\n\n//     </div>\n//   );\n// };\n\n// export default Dietfoods;","map":{"version":3,"names":[],"sources":["/Users/sachivmk/REACTLEARNING/client/src/components/others/Dietfoods.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import '../../assets/css/others/Dietfood.css';\n// import Card from '@mui/material/Card';\n// import CardContent from '@mui/material/CardContent';\n// import CardMedia from '@mui/material/CardMedia';\n// import Typography from '@mui/material/Typography';\n\n// import Select from '@mui/material/Select';\n// import MenuItem from '@mui/material/MenuItem';\n// import FormControl from '@mui/material/FormControl';\n// import InputLabel from '@mui/material/InputLabel';\n// import CalorieCalculator from './CalorieCalculator';\n\n// const cardData = [\n//   { id: 1, category: 'meats', title: 'Chicken Fry with oil', image: 'https://t4.ftcdn.net/jpg/06/28/27/79/360_F_628277923_qT6P3ITveUaKTvSDk6s9DYiuXkNviGII.jpg', carbs: 0, protein: 25, fats: 10, fiber: 0, calories: 220 },\n//   { id: 2, category: 'meats', title: 'Mutton with oil', image: 'https://www.archanaskitchen.com/images/archanaskitchen/1-Author/jyothir/Kerala_Mutton_Pepper_Fry.jpg', carbs: 0, protein: 20, fats: 15, fiber: 0, calories: 250 },\n//   { id: 3, category: 'meats', title: 'Fish', image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTw-OVJWuFn4iK_0OqbjJS3xyA96jbanNEEZA&s', carbs: 0, protein: 22, fats: 5, fiber: 0, calories: 150 },\n//   { id: 4, category: 'meats', title: 'Beef', image: 'https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjDfO_QSWBm4j6s8EZgYRWEqFnan0mJZYZEeLRNdBi_JnBSf5KBdzUNmv12E-YhF6svnw7qfZBRgc7lB-IhAtWHROR30dNwt6ku_R6Jn0iYGgdDs2Ibf41wPSFmi-sXM8CjAvfnynwyVhk/s1600/beef+fry+1i.JPG', carbs: 0, protein: 26, fats: 20, fiber: 0, calories: 290 },\n//   { id: 5, category: 'nuts', title: 'Groundnut', image: 'https://t3.ftcdn.net/jpg/03/31/41/94/360_F_331419421_Km1fAYtIUbdId8eWetjAKTdpydJIBMcL.jpg', carbs: 16, protein: 25, fats: 49, fiber: 9, calories: 567 },\n//   { id: 6, category: 'meat', title: 'Whole egg', image: 'https://www.jerkyholic.com/wp-content/uploads/2023/04/Eggs-Smoked.jpg', carbs: 1.1, protein: 13, fats: 11, fiber: 0, calories: 155 },\n//   { id: 7, category: 'meat', title: 'Egg whites', image: 'https://laughingspatula.com/wp-content/uploads/2022/03/egg-white-shell-for-deviled-egg.jpg', carbs: 0.7, protein: 11, fats: 0.2, fiber: 0, calories: 52 },\n//   { id: 8, category: 'millets', title: 'Oats', image: 'https://img.freepik.com/free-photo/raw-barley-grain-old-dark-background_1150-37928.jpg', carbs: 66, protein: 17, fats: 7, fiber: 11, calories: 389 },\n//   { id: 9, category: 'millets', title: 'Boiled Black chana', image: 'https://www.cookwithmanali.com/wp-content/uploads/2019/03/Kala-Chana-Chaat-500x375.jpg', carbs: 27, protein: 9, fats: 3, fiber: 8, calories: 164 },\n//   { id: 10, category: 'millets', title: 'Boiled White Chana', image: 'https://media.istockphoto.com/id/1577137916/photo/cooked-chickpeas-in-white-bowl-isolated-on-white.jpg?s=612x612&w=0&k=20&c=byVp7OJMvVO6YDQFTBHof7VMdcFXaUNJ8Ab-yx586Wo=', carbs: 27, protein: 9, fats: 3, fiber: 8, calories: 164 },\n//   { id: 11, category: 'millets', title: 'Green Moong Dal', image: 'https://5.imimg.com/data5/SELLER/Default/2023/3/DC/CM/HQ/31738799/green-gram-500x500.jpg', carbs: 59, protein: 24, fats: 1, fiber: 16, calories: 347 },\n//   { id: 12, category: 'millets', title: 'Boiled Brown Beans', image: 'https://cdn.apartmenttherapy.info/image/upload/f_jpg,q_auto:eco,c_fill,g_auto,w_1500,ar_1:1/k%2FPhoto%2FRecipes%2F2020-10-How-to-Cook-a-Perfect-Pot-of-Pinto-Beans%2FHow-to-Cook-a-Perfect-Pot-of-Pinto-Beans_010', carbs: 27, protein: 9, fats: 3, fiber: 8, calories: 164 },\n//   { id: 13, category: 'millets', title: 'Boiled Rice', image: 'https://www.kitchensanctuary.com/wp-content/uploads/2019/08/How-to-boil-rice-square-FS-6126.jpg', carbs: 28, protein: 2.7, fats: 0.3, fiber: 0.4, calories: 130 },\n//   { id: 14, category: 'millets', title: 'Chapati', image: 'https://static.toiimg.com/thumb/61203720.cms?imgsize=670417&width=800&height=800', carbs: 18, protein: 4, fats: 3, fiber: 2, calories: 104 },\n//   { id: 15, category: 'millets', title: 'Parota', image: 'https://www.whiskaffair.com/wp-content/uploads/2020/04/Kerala-Parotta-1.jpg', carbs: 32, protein: 6, fats: 10, fiber: 2, calories: 300 },\n//   { id: 16, category: 'millets', title: 'Dosa', image: 'https://t3.ftcdn.net/jpg/01/86/33/72/360_F_186337209_9rbcMLu3wGCDNaEoK1jO0aNzb0pv7Xs7.jpg', carbs: 27, protein: 4, fats: 6, fiber: 1, calories: 168 },\n//   { id: 17, category: 'millets', title: 'Idli', image: 'https://us.123rf.com/450wm/cokemomo/cokemomo1310/cokemomo131000040/23294622-idli-south-indian-rice-cake-on-banana-leaf.jpg?ver=6', carbs: 12, protein: 2, fats: 0.4, fiber: 0.5, calories: 58 },\n//   { id: 18, category: 'millets', title: 'Ragi Dosa', image: 'https://www.chefkunalkapur.com/wp-content/uploads/2021/05/Ragi-Dosa-Instant-scaled.jpg?v=1619848402', carbs: 32, protein: 5, fats: 7, fiber: 2, calories: 170 },\n//   { id: 19, category: 'millets', title: 'Puri', image: 'https://cdn.cdnparenting.com/articles/2020/02/26144721/PURI-BHAJI-RECIPE.webp', carbs: 23, protein: 3, fats: 9, fiber: 0.8, calories: 149 },\n// ];\n\n// const Dietfoods = () => {\n//   const [filter, setFilter] = useState('all');\n//   const [inputValues, setInputValues] = useState({});\n//   const [meals, setMeals] = useState({\n//     breakfast: [],\n//     morningSnacks: [],\n//     lunch: [],\n//     eveningSnacks: [],\n//     dinner: []\n//   });\n\n//   const handleFilterChange = (event) => {\n//     setFilter(event.target.value);\n//   };\n\n//   const handleInputChange = (event, itemId) => {\n//     const { value } = event.target;\n//     setInputValues((prevValues) => ({\n//       ...prevValues,\n//       [itemId]: value,\n//     }));\n//   };\n\n//   const calculateTotal = (item) => {\n//     const grams = parseFloat(inputValues[item.id] || 0);\n//     const factor = grams / 100;\n\n//     return {\n//       carbs: (item.carbs * factor).toFixed(2),\n//       protein: (item.protein * factor).toFixed(2),\n//       fats: (item.fats * factor).toFixed(2),\n//       fiber: (item.fiber * factor).toFixed(2),\n//       calories: (item.calories * factor).toFixed(2),\n//     };\n//   };\n\n//   const addToMeal = (mealName, item) => {\n//     const totals = calculateTotal(item);\n//     const foodItem = {\n//       ...item,\n//       quantity: inputValues[item.id],\n//       totals\n//     };\n\n//     setMeals((prevMeals) => ({\n//       ...prevMeals,\n//       [mealName]: [...prevMeals[mealName], foodItem],\n//     }));\n//   };\n\n//   const removeFromMeal = (mealName, itemId) => {\n//     setMeals((prevMeals) => ({\n//       ...prevMeals,\n//       [mealName]: prevMeals[mealName].filter((food) => food.id !== itemId),\n//     }));\n//   };\n\n//   const resetMeals = () => {\n//     setMeals({\n//       breakfast: [],\n//       morningSnacks: [],\n//       lunch: [],\n//       eveningSnacks: [],\n//       dinner: []\n//     });\n//     setInputValues({});\n//   };\n\n//   const filteredItems = filter === 'all' ? cardData : cardData.filter(item => item.category === filter);\n\n//   const renderMeal = (mealName) => {\n//     const meal = meals[mealName];\n\n//     const totalNutrients = meal.reduce((acc, food) => {\n//       acc.carbs += parseFloat(food.totals.carbs);\n//       acc.protein += parseFloat(food.totals.protein);\n//       acc.fats += parseFloat(food.totals.fats);\n//       acc.fiber += parseFloat(food.totals.fiber);\n//       acc.calories += parseFloat(food.totals.calories);\n//       return acc;\n//     }, { carbs: 0, protein: 0, fats: 0, fiber: 0, calories: 0 });\n\n//     return (\n//       <div className=\"meal\">\n//         <h3 style={{color:'white',marginBottom:'20px',fontSize:'25px'}}>{mealName.charAt(0).toUpperCase() + mealName.slice(1)}</h3>\n//         <ul>\n//           <li>Total Carbs: {totalNutrients.carbs.toFixed(2)} g</li>\n//           <li>Total Protein: {totalNutrients.protein.toFixed(2)} g</li>\n//           <li>Total Fats: {totalNutrients.fats.toFixed(2)} g</li>\n//           <li>Total Fiber: {totalNutrients.fiber.toFixed(2)} g</li>\n//           <li>Total Calories: {totalNutrients.calories.toFixed(2)} kcal</li>\n//         </ul>\n//         <div class=\"typesofmeals\">\n//         <ul>\n//           {meal.map(food => (\n//             <li key={food.id}>\n//               {food.title} - {food.quantity}g\n//               <button class='remove' onClick={() => removeFromMeal(mealName, food.id)}>Remove</button>\n//             </li>\n//           ))}\n//         </ul>\n//         </div>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div>\n      \n//       <CalorieCalculator/>\n//       <h2 className=\"headdd\">Track your calories</h2>\n// <div className=\"meals-container\">\n//     <div className=\"mealbox\">{renderMeal('breakfast')}</div>\n//     <div className=\"mealbox\">{renderMeal('morningSnacks')}</div>\n//     <div className=\"mealbox\">{renderMeal('lunch')}</div>\n//     <div className=\"mealbox\">{renderMeal('eveningSnacks')}</div>\n//     <div className=\"mealbox\">{renderMeal('dinner')}</div>\n// </div>\n// <div className=\"resetbtn\">\n//     <button onClick={resetMeals}>Reset All</button>\n// </div>\n// <div className=\"search-filter-container\">\n//     <FormControl variant=\"outlined\" className=\"filter-dropdown\">\n//         <InputLabel></InputLabel>\n//         <Select\n//             className=\"selectfood\"\n//             value={filter}\n//             onChange={handleFilterChange}\n//         >\n//             <MenuItem value=\"all\">All</MenuItem>\n//             <MenuItem value=\"meats\">Meats</MenuItem>\n//             <MenuItem value=\"nuts\">Nuts</MenuItem>\n//             <MenuItem value=\"millets\">Millets</MenuItem>\n//         </Select>\n//     </FormControl>\n// </div>\n// <div className=\"dietfoods\">\n//     <div className=\"dietrows\">\n//         {filteredItems.map(item => {\n//             const totals = calculateTotal(item);\n//             return (\n//                 <div key={item.id} className={`subcard ${item.isSelected ? 'selected' : ''}`}>\n//                     <Card sx={{ width: 230 }}>\n//                         <CardMedia\n//                             component=\"img\"\n//                             alt={item.title}\n//                             height=\"140\"\n//                             image={item.image}\n//                         />\n//                         <CardContent>\n//                             <Typography gutterBottom variant=\"h7\" component=\"div\">\n//                                 {item.title}\n//                                 <input className=\"graminput\"\n//                                     type=\"number\"\n//                                     placeholder=\"In grams\"\n//                                     value={inputValues[item.id] || ''}\n//                                     onChange={(event) => handleInputChange(event, item.id)}\n//                                 />\n//                             </Typography>\n//                             <Typography variant=\"body2\" color=\"text.secondary\">\n//                                 <ul className='subcardul'>\n//                                     <li className='subcardulli'>Carbs: {totals.carbs} g</li>\n//                                     <li className='subcardulli'>Protein: {totals.protein} g</li>\n//                                     <li className='subcardulli'>Fats: {totals.fats} g</li>\n//                                     <li className='subcardulli'>Fiber: {totals.fiber} g</li>\n//                                     <li className='subcardulli'>Calories: {totals.calories} kcal</li>\n//                                     <br />\n//                                     <li className='subcardulli'>\n//                                         <button className='adddd' onClick={() => addToMeal('breakfast', item)}>Add to Breakfast</button>\n//                                         <button className='adddd' onClick={() => addToMeal('morningSnacks', item)}>Add to Morning Snacks</button>\n//                                         <button className='adddd' onClick={() => addToMeal('lunch', item)}>Add to Lunch</button>\n//                                         <button className='adddd' onClick={() => addToMeal('eveningSnacks', item)}>Add to Evening Snacks</button>\n//                                         <button className='adddd' onClick={() => addToMeal('dinner', item)}>Add to Dinner</button>\n//                                     </li>\n//                                 </ul>\n//                             </Typography>\n//                         </CardContent>\n//                     </Card>\n//                 </div>\n//             );\n//         })}\n//     </div>\n// </div>\n\n\n//     </div>\n//   );\n// };\n\n// export default Dietfoods;\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}