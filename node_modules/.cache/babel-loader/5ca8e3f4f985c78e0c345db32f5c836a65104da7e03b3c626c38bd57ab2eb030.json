{"ast":null,"code":"var _jsxFileName = \"/Users/sachivmk/REACTLEARNING/client/src/components/others/Gymlocator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from 'react';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport '../../assets/css/others/Gymlocator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '500px'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\nconst Gymlocator = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const inputRef = useRef();\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'YOUR_GOOGLE_MAPS_API_KEY',\n    libraries: ['places']\n  });\n  const onLoad = useCallback(function callback(map) {\n    console.log('Map loaded:', map);\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(function callback(map) {\n    console.log('Map unmounted:', map);\n    setMap(null);\n  }, []);\n  const handleSearch = () => {\n    const location = inputRef.current.value;\n    const geocoder = new window.google.maps.Geocoder();\n    geocoder.geocode({\n      address: location\n    }, (results, status) => {\n      if (status === 'OK') {\n        const location = results[0].geometry.location;\n        map.setCenter(location);\n        const service = new window.google.maps.places.PlacesService(map);\n        const request = {\n          location: location,\n          radius: '3000',\n          type: ['gym']\n        };\n        service.nearbySearch(request, (results, status) => {\n          if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n            setMarkers(results.map(place => ({\n              position: place.geometry.location,\n              title: place.name\n            })));\n          } else {\n            console.error('PlacesServiceStatus:', status);\n          }\n        });\n      } else {\n        console.error('Geocode status:', status);\n        alert('Geocode was not successful for the following reason: ' + status);\n      }\n    });\n  };\n  if (loadError) {\n    console.error('Google Maps API load error:', loadError);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error loading Google Maps API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"locmain\",\n    children: [\"Find Gyms near you\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Your Location\",\n        className: \"locinp\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 98\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"locsb\",\n        type: \"button\",\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), isLoaded && /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 10,\n      onLoad: onLoad,\n      onUnmount: onUnmount,\n      children: markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: marker.position,\n        title: marker.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Gymlocator, \"CfQBsGOG+tXSkyfAzz71wd+sRKM=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Gymlocator;\nexport default Gymlocator;\nvar _c;\n$RefreshReg$(_c, \"Gymlocator\");","map":{"version":3,"names":["React","useState","useCallback","useRef","GoogleMap","Marker","useJsApiLoader","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","Gymlocator","_s","map","setMap","markers","setMarkers","inputRef","isLoaded","loadError","id","googleMapsApiKey","libraries","onLoad","callback","console","log","onUnmount","handleSearch","location","current","value","geocoder","window","google","maps","Geocoder","geocode","address","results","status","geometry","setCenter","service","places","PlacesService","request","radius","type","nearbySearch","PlacesServiceStatus","OK","place","position","title","name","error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","ref","onClick","mapContainerStyle","zoom","marker","index","_c","$RefreshReg$"],"sources":["/Users/sachivmk/REACTLEARNING/client/src/components/others/Gymlocator.jsx"],"sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport '../../assets/css/others/Gymlocator.css';\n\nconst containerStyle = {\n  width: '100%',\n  height: '500px'\n};\n\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nconst Gymlocator = () => {\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const inputRef = useRef();\n\n  const { isLoaded, loadError } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'YOUR_GOOGLE_MAPS_API_KEY',\n    libraries: ['places']\n  });\n\n  const onLoad = useCallback(function callback(map) {\n    console.log('Map loaded:', map);\n    setMap(map);\n  }, []);\n\n  const onUnmount = useCallback(function callback(map) {\n    console.log('Map unmounted:', map);\n    setMap(null);\n  }, []);\n\n  const handleSearch = () => {\n    const location = inputRef.current.value;\n    const geocoder = new window.google.maps.Geocoder();\n    geocoder.geocode({ address: location }, (results, status) => {\n      if (status === 'OK') {\n        const location = results[0].geometry.location;\n        map.setCenter(location);\n        const service = new window.google.maps.places.PlacesService(map);\n        const request = {\n          location: location,\n          radius: '3000',\n          type: ['gym']\n        };\n        service.nearbySearch(request, (results, status) => {\n          if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n            setMarkers(results.map(place => ({\n              position: place.geometry.location,\n              title: place.name\n            })));\n          } else {\n            console.error('PlacesServiceStatus:', status);\n          }\n        });\n      } else {\n        console.error('Geocode status:', status);\n        alert('Geocode was not successful for the following reason: ' + status);\n      }\n    });\n  };\n\n  if (loadError) {\n    console.error('Google Maps API load error:', loadError);\n    return <div>Error loading Google Maps API</div>;\n  }\n\n  return (\n    <div className='locmain'>\n      Find Gyms near you\n      <div>\n        <input type=\"text\" placeholder='Enter Your Location' className='locinp' ref={inputRef} /><br />\n        <button className='locsb' type='button' onClick={handleSearch}>Search</button>\n      </div>\n      {isLoaded && (\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={center}\n          zoom={10}\n          onLoad={onLoad}\n          onUnmount={onUnmount}\n        >\n          {markers.map((marker, index) => (\n            <Marker key={index} position={marker.position} title={marker.title} />\n          ))}\n        </GoogleMap>\n      )}\n    </div>\n  );\n};\n\nexport default Gymlocator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}